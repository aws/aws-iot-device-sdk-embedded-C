/**
@mainpage
@anchor shadow
@brief AWS IoT Device Shadow library.

> A device's shadow is a JSON document that is used to store and retrieve current state information for a device. The Device Shadow service maintains a shadow for each device you connect to AWS IoT. You can use the shadow to get and set the state of a device over MQTT or HTTP, regardless of whether the device is connected to the Internet. Each device's shadow is uniquely identified by the name of the corresponding thing.

<span style="float:right;margin-right:4em"> &mdash; <i>Description of Device Shadows from [AWS IoT documentation](https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html)</i></span><br>
*/

/**
@page shadow_demo Demo
@brief The Shadow demo demonstrates usage of the Shadow library.
*/

/**
@configpage{shadow,Shadow library}

@section AWS_IOT_SHADOW_ENABLE_ASSERTS
@brief Set this to `1` to perform sanity checks when using the Shadow library.

Asserts are useful for debugging, but should be disabled in production code. If this is set to `1`, @ref AwsIotShadow_Assert can be defined to set the assertion function; otherwise, the standard library's [assert](http://pubs.opengroup.org/onlinepubs/9699919799/functions/assert.html) function will be used.

@configpossible `0` (asserts disabled) or `1` (asserts enabled)<br>
@configrecommended `1` when debugging; `0` in production code.<br>
@configdefault `0`

@section AWS_IOT_SHADOW_DEFAULT_MQTT_TIMEOUT_MS
@brief Set the default timeout (in milliseconds) for [MQTT library](@ref mqtt_functions) called by the Shadow library.

If the `mqttTimeout` argument of @ref shadow_function_init is `0`, the Shadow library uses this setting for MQTT timeouts. This timeout is passed to functions such as @ref mqtt_function_timedsubscribe, @ref mqtt_function_timedunsubscribe, and @ref mqtt_function_timedpublish to limit amount of time an MQTT function may block.

@configpossible Any positive integer.<br>
@configrecommended This setting must be at least the network round-trip time, as an MQTT packet must be sent to the AWS IoT server and a response must be received. The recommended minimum value is `500`.<br>
@configdefault `5000`

@section AWS_IOT_LOG_LEVEL_SHADOW
@brief Set the log level of the Shadow library.

Log messages from the Shadow library at or below this setting will be printed.

@configpossible One of the @ref logging_constants_levels.<br>
@configdefault @ref AWS_IOT_LOG_LEVEL_GLOBAL; if that is undefined, then #AWS_IOT_LOG_NONE.

@section AwsIotShadow_Assert
@brief Assertion function used when @ref AWS_IOT_SHADOW_ENABLE_ASSERTS is `1`.

@configpossible Any function with the same signature as the standard library's [assert](http://pubs.opengroup.org/onlinepubs/9699919799/functions/assert.html) function.<br>
@configdefault Standard library [assert](http://pubs.opengroup.org/onlinepubs/9699919799/functions/assert.html) function if @ref AWS_IOT_SHADOW_ENABLE_ASSERTS is `1`; otherwise, nothing.

@section shadow_config_memory Memory allocation
@brief If @ref AWS_IOT_STATIC_MEMORY_ONLY is `1`, then the following functions must be re-implemented for the Shadow library.
- #AwsIotShadow_MallocOperation <br>
  @copybrief AwsIotShadow_MallocOperation
- #AwsIotShadow_FreeOperation <br>
  @copybrief AwsIotShadow_FreeOperation
- #AwsIotShadow_MallocString <br>
  @copybrief AwsIotShadow_MallocString
- #AwsIotShadow_FreeString <br>
  @copybrief AwsIotShadow_FreeString
- #AwsIotShadow_MallocSubscription <br>
  @copybrief AwsIotShadow_MallocSubscription
- #AwsIotShadow_FreeSubscription <br>
  @copybrief AwsIotShadow_FreeSubscription
*/
